log4j.rootLogger=info,stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout



log4j.logger.cn.rong=info,super,stdout
log4j.additivity.cn.rong=false
#additivity是 子Logger 是否继承 父Logger 的 输出源（appender） 的标志位。具体说，默认情况下子Logger会继承父Logger的appender，
#也就是说子Logger会在父Logger的appender里输出。若是additivity设为false，则子Logger只会在自己的appender里输出，
#而不会在父Logger的appender里输出。
log4j.appender.super.Threshold=debug
#Threshold 是一个全局过滤器  会过滤掉这个日志记录器中低于设置的级别的日志  例如这里设置的过滤级别是debug,则低于debug级别的
#日志记录级别则不会打印到文件中.
log4j.appender.super=org.apache.log4j.DailyRollingFileAppender
log4j.appender.super.DatePattern='.'yyyy-MM-dd
log4j.appender.super.file=${log.dir}/super.log
log4j.appender.super.layout=org.apache.log4j.PatternLayout
log4j.appender.super.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p [%t] (%F:%L) -%n %m%n


#mybatis 日志
log4j.logger.com.ibatis=debug
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug,stdout